# Source: "Think Artificial Intelligence" by Jerry Cuomo, 2024
# Purpose: Educational code examples from the book.
# Copyright Â© 2024 Jerry Cuomo. All rights reserved.
#
# This code was autogenerated by GPT-4, from the following prompt:
# Prompt: LangChain program to generate and evaluate a human {input} with system responding in {language: French}, ensuring it can effectively {validate by identify and handle inappropriate language}.
#
# About: This script demonstrates using LangChain to generate responses in French and evaluate them for inappropriate content. It uses LangChain's core components, including ChatPromptTemplate and ChatOpenAI, to construct and invoke a response-evaluation chain.
# Setup: Requires Python with LangChain and LangChain-OpenAI installed. Ensure the API key is securely stored and masked in the actual implementation.
import os
from langchain_openai import ChatOpenAI

os.environ["OPENAI_API_KEY"] = "INSERT_OPENAI_API_KEY_HERE"

# Initialize the language model
llm = ChatOpenAI(temperature=0)

# Define a prompt template
from langchain_core.prompts import ChatPromptTemplate
prompt = ChatPromptTemplate.from_messages([
    ("system", "Please respond in {language} in 20 words or less. {validate}"),
    ("human", "{input}")
])

# Define the simple chain where the prompt is sent to the LLM for evaluation
chain = prompt | llm

# Invoke the chain with "Hello World"
#response = chain.invoke({"input": "Assh***!", "validate": "If the input's inappropriate, I'll ask, 'Do you kiss your mother with that mouth?'", "language": "French"})
response = chain.invoke({"input": "Hello World!", "validate": "If the input's inappropriate, I'll ask, 'Do you kiss your mother with that mouth?'", "language": "French"})

print(response)
